name: Build EXE using PyInstaller

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Unzip Automation1 API
        run: |
          unzip automation1.zip -d automation1-api

      - name: Install Automation1 API
        run: |
          pip install ./automation1-api/automation1  # Install the API

      - name: List contents of automation1-api
        run: |
          dir automation1-api\automation1\references

      - name: Clean previous builds
        run: |
          if (Test-Path "dist") {
            Remove-Item -Recurse -Force dist
          }
          if (Test-Path "build") {
            Remove-Item -Recurse -Force build
          }

      - name: Install dependencies
        run: |
          pip install pyinstaller
          pip install matplotlib

      - name: Build EXE with PyInstaller
        run: |
          pyinstaller -F --add-binary "automation1-api/automation1/references/Automation1C64.dll;automation1/references" --add-binary "automation1-api/automation1/references/Automation1C.dll;automation1/references" --add-binary "automation1-api/automation1/references/Automation1Compiler64.dll;automation1/references" --add-binary "automation1-api/automation1/references/Automation1Compiler.dll;automation1/references" MetrologyTestInterface.py


      - name: Verify EXE exists
        run: |
          if (Test-Path "dist/MetrologyTestInterface.exe") {
            Write-Host "EXE file exists."
          } else {
            Write-Host "EXE file does not exist!"
          }

      - name: Upload EXE
        uses: actions/upload-artifact@v4
        with:
          name: MetrologyTestInterface
          path: dist/MetrologyTestInterface.exe
          
  release:
    needs: build
    runs-on: ubuntu-latest  # Use Ubuntu for the release job to utilize GitHub CLI

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: MetrologyTestInterface

    - name: Install GitHub CLI
      run: sudo apt-get install gh -y

    - name: Create release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        tag: "v1.0.0-${{ github.run_number }}"
      run: |
        gh release create "$tag" \
            --repo="$GITHUB_REPOSITORY" \
            --title="${tag#v}" \
            --generate-notes \
            MetrologyTestInterface.exe
