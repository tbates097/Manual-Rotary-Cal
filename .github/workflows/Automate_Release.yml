name: Release Repository

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create Package
      run: |
        # Create a directory for the package
        mkdir -p release_package
        # Copy all files except the release_package directory to the package directory
        rsync -av --progress --exclude='release_package' ./ release_package/
        # Create a zip archive of all files in the repository
        cd release_package
        zip -r repository_package.zip .

    - name: Upload Release Artifact
      uses: actions/upload-artifact@v4
      with:
        name: repository_package.zip
        path: release_package/repository_package.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: repository_package.zip

    - name: Install GitHub CLI
      run: sudo apt-get install gh -y

    - name: Create release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        tag: "v1.0.${{ github.run_number }}"
      run: |
        # Ensure the release_package directory exists
        if [ -d "release_package" ]; then
          echo "Directory exists."
        else
          mkdir release_package
        fi

        # Move the downloaded artifact to the release_package directory
        mv repository_package.zip release_package/

        # Create the release
        gh release create "$tag" \
            --repo="$GITHUB_REPOSITORY" \
            --title="${tag#v}" \
            --generate-notes \
            release_package/repository_package.zip
